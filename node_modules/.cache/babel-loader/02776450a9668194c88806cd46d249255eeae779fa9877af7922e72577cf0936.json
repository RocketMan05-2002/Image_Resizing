{"ast":null,"code":"var _jsxFileName = \"/Users/rocketman/PC/CODING/publish/Image_Resizing/src/components/ImageResizing.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './ImageResizing.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageResizing() {\n  _s();\n  // const[image,setImage] = useState(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState({\n    height: 0,\n    width: 0\n  });\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        setImageSrc(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const resizeImage = (width, height) => {\n    setImageDimensions({\n      width,\n      height\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"image-input\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => resizeImage(1080, 1080),\n        children: \" Instagram (1080x1080)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => resizeImage(1200, 630),\n        children: \" Facebook (1200x630)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => resizeImage(1200, 675),\n        children: \" Twitter (1200x675)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => resizeImage(600, 300),\n        children: \" Website (600x300)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSrc,\n        alt: \"uploaded\",\n        width: imageDimensions.width,\n        height: imageDimensions.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageResizing, \"Iz19A6Ac1+YWIGID6M7N5oNneok=\");\n_c = ImageResizing;\nvar _c;\n$RefreshReg$(_c, \"ImageResizing\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ImageResizing","_s","imageSrc","setImageSrc","imageDimensions","setImageDimensions","height","width","handleFileChange","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","resizeImage","className","children","type","id","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/rocketman/PC/CODING/publish/Image_Resizing/src/components/ImageResizing.js"],"sourcesContent":["import { useState } from 'react'\nimport './ImageResizing.css'\n\nexport default function ImageResizing(){\n\n    // const[image,setImage] = useState(null);\n    const[imageSrc,setImageSrc] = useState(null);\n    const[imageDimensions,setImageDimensions] = useState({height:0,width:0});\n\n    const handleFileChange = (e) =>{\n        const file = e.target.files[0];\n        if(file){\n            const reader = new FileReader();\n            reader.onload = function(e){\n                setImageSrc(e.target.result);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const resizeImage = (width,height) =>{\n        setImageDimensions({width, height});\n    };\n\n    return(\n        <div className=\"container\">\n\n            <input\n                type=\"file\"\n                id=\"image-input\"\n                accept=\"image/*\"\n                onChange={handleFileChange}\n            />\n            <div className=\"buttons-container\">\n                <button onClick={()=>resizeImage(1080,1080)}> Instagram (1080x1080)</button>\n                <button onClick={()=>resizeImage(1200,630)}> Facebook (1200x630)</button>\n                <button onClick={()=>resizeImage(1200,675)}> Twitter (1200x675)</button>\n                <button onClick={()=>resizeImage(600,300)}> Website (600x300)</button>\n            </div>\n            <br />\n            {\n                imageSrc && (\n                    <div className='image-container'>\n                        <img\n                        src={imageSrc}\n                        alt='uploaded'\n                        width={imageDimensions.width}\n                        height={imageDimensions.height}\n                        />\n                    </div>\n                )\n            }\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}